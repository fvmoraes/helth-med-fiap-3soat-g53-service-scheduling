name: Build Artifact

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: fiap-3soat-g53
  GAR_LOCATION: us-central1-docker.pkg.dev/fiap-3soat-g53/fiap3soatg53-gar
  SERVICE: helthmed-scheduling
  IMAGE: helthmed-scheduling
  REGION: us-central1

jobs:
  build:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: 17
      #     distribution: 'zulu' # Alternative distribution options are available.

      # - name: Cache SonarCloud packages
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar

      # - name: Cache Maven packages
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.m2
      #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: ${{ runner.os }}-m2

      # - name: Build and analyze
      #   env:
      #     # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=fvmoraes_app-lanchonete-fiap-3soat-g53-service-producao
        
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@main'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
          registry: '${{ env.GAR_LOCATION }}'

      - name: Build and Push Container
        run: |-
          docker build -f Dockerfile -t "${{ env.GAR_LOCATION }}/${{ env.IMAGE }}:${{ env.TAG }}" ./
          docker push "${{ env.GAR_LOCATION }}/${{ env.IMAGE }}:${{ env.TAG }}"